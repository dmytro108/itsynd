---
# ************************************** Install PostgreSQL & Python libs
- name: Install PostgreSQL
  become: true
  ansible.builtin.dnf:
    name:
      - postgresql15.x86_64
      - postgresql15-server
    state: present

- name: Install pip
  become: true
  ansible.builtin.dnf:
    name: python3-pip
    state: present

- name: Install acl # Needed for acting Ansible on bahalf of postgres user
  become: true
  ansible.builtin.dnf:
    name: acl
    state: present

- name: Install psycopg2 # Needed for Ansible PostgreSQL module
  become: true
  become_user: postgres
  ansible.builtin.pip:
    name: psycopg2-binary
    executable: pip3

# ************************************** PostgreSQL Up & Run
- name: Find out if PostgreSQL is initialized
  become: true
  ansible.builtin.stat:
    path: "{{ infra_setup_pg_hba_path }}"
  register: postgres_data

- name: Initialize PostgreSQL
  become: true
  ansible.builtin.command: postgresql-setup initdb
  when: not postgres_data.stat.exists
  register: my_output
  changed_when: my_output.rc != 0

- name: Start and enable postgresql service
  become: true
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

# ************************************** DB Setup
- name: Create app database
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    state: present
    name: "{{ infra_setup_db_name }}"

- name: Create db user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    state: present
    name: "{{ infra_setup_db_user }}"
    password: "{{ infra_setup_db_user_passw }}"

- name: Grant db user access to app db
  become: true
  become_user: postgres
  community.postgresql.postgresql_privs:
    type: database
    database: "{{ infra_setup_db_name }}"
    roles: "{{ infra_setup_db_user }}"
    grant_option: false
    privs: all
