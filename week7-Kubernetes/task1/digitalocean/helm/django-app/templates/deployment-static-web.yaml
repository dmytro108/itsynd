kind:       Deployment
apiVersion: apps/v1

metadata:
  name:       static-web
  namespace:  {{ .Release.Name }}
  labels:
    app:      static-web

spec:
  replicas: {{ .Values.Deployment.replicas.min }}
  selector:
    matchLabels:
      app: static-web

  template:
    metadata: 
      namespace:  {{ .Release.Name }}
      labels: 
        app:      static-web

    spec:
      volumes:
        - name: static-content
          persistentVolumeClaim:
              claimName: static-assets
        - name: nginx-conf
          configMap:
            name: static-web-conf

      initContainers:
        - name: pv-permission-fix
          image: busybox
          command: ["/bin/chmod","-R","777", "/data"]
          volumeMounts:
          - name: static-content
            mountPath: /data

      containers:
        - name:  static-web-nginx
          image: nginx
          volumeMounts:
          - name:       static-content
            mountPath:  /mnt
            readOnly:   true
          - name:       nginx-conf
            mountPath:  /etc/nginx/conf.d
            readOnly:   true
          resources:
            limits:
              cpu:  {{ .Values.Container.resources.cpu.req }}
              memory: {{ .Values.Container.resources.memory.req }}
            limits:
              cpu: {{ .Values.Container.resources.cpu.lim }}
              memory: {{ .Values.Container.resources.memory.lim }}
          ports:
          - containerPort:  80
            name:           http
          livenessProbe:
            httpGet:
              path:              /static
              port:              http
            initialDelaySeconds: 5
            timeoutSeconds:      10
          readinessProbe:
            httpGet:
              path:               /static
              port:               http
            initialDelaySeconds:  5
            timeoutSeconds:       10