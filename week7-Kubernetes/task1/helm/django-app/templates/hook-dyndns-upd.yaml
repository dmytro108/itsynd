kind: Job
apiVersion: batch/v1
metadata:
  name: dyn-dns-update
  namespace: django-app
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded  

spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      containers:
      - name: namecheap-dns-upd
        image: curlimages/curl:latest
        command: ["curl",  
        {{- $command := print .Values.Config.dyn_dns_endpoint "password=" .Values.dyn_dns_passw -}}
        {{- $command := print $command "&host=" (trimSuffix "." (mustRegexFind "^(.*?)\\."  .Values.Config.host)) -}}
        {{- $elements := splitList "." .Values.Config.host -}}
        {{- $domain := join "." (slice $elements 1 (len $elements)) -}}
        {{- $command := print $command "&domain=" $domain -}}
        {{- $command := print $command "&ip=" .Values.lb_ip -}}
        {{- $command | quote -}} ]
      restartPolicy: Never

---

kind: Job
apiVersion: batch/v1
metadata:
  name: dyn-dns-check
  namespace: django-app
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded  

spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      containers:
      - name: host-dns-check
        image: curlimages/curl:latest
        # Ping the webserver, exit with success if responce code is 200 or 404. Means DNS works
        # /bin/sh -c "until \
        #              curl --connect-timeout 5 -L -o /dev/null \
        #              -s -w '%{http_code}\n' http://<hostname> | grep -qE '200|404'; \
        #            do sleep 5; done"
        command: ["/bin/sh", "-c",  
        {{- $command := print "until curl  --connect-timeout 5 -L -o /dev/null -s -w '%{http_code}\n' http://" -}}
        {{- $command := print $command .Values.Config.host -}}
        {{- $command := print $command " | grep -qE '200|404'; do sleep 5; done" -}}
        {{- $command | quote -}} ]
      restartPolicy: OnFailure